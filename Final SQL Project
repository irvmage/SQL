For this project, I downloaded chinook data from Break Into Tech by Charlotte Chaze.
# Then I imported the data to SQLite Studio.
# Finally, I performed analytics on the data using SQL. 

#1. Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT
  Customerid, 
  FirstName, 
  LastName, 
  Country
FROM
  customers
WHERE
  Country!='USA'
  ;

#2. Show only the Customers from Brazil.
SELECT
  *
FROM
  customers
WHERE
  Country='Brazil'
  ;

#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT
  c.customerid, c.FirstName || ' ' || c.LastName AS FullName,
  i.InvoiceID, 
  i.InvoiceDate, 
  i.BillingCountry
FROM
  customers c
JOIN
  invoices i
ON
c.customerid=i.customerid
WHERE
  i.BillingCountry='Brazil'
;

#4. Show the Employees who are Sales Agents.
SELECT 
  *
FROM
  employees
WHERE
  Title='Sales Support Agent'
;

#5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT 
  DISTINCT BillingCountry
FROM
  invoices
;

#6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT
    e.FirstName || ' ' || e.LastName AS SalesAgentName,
    i.InvoiceId,
    i.InvoiceDate,
    i.BillingCountry
FROM
    employees e
JOIN
    customers c ON e.EmployeeId = c.SupportRepId
JOIN
    invoices i ON c.CustomerId = i.CustomerId
;

#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT
   i.Total,
   c.FirstName || ' ' || c.LastName AS FullName,
   c.Country,
   e.FirstName || ' ' || e.LastName AS SalesAgentName
FROM
  employees e
JOIN
  customers c ON e.EmployeeId = c.SupportRepId
JOIN
  invoices i ON c.CustomerId = i.CustomerId
;

#8. How many Invoices were there in 2009?
SELECT
  COUNT(*)
FROM
  invoices
WHERE 
  InvoiceDate 
BETWEEN '2009-01-01' AND '2009-12-31'
;

#9. What are the total sales for 2009?
SELECT
  SUM(Total) AS 'Total Sales 2009'
FROM
  invoices
WHERE
  InvoiceDate 
BETWEEN '2009-01-01' AND '2009-12-31'
;

#10. Write a query that includes the purchased track name with each invoice line ID.
SELECT 
  il.InvoiceLineId, 
  t.Name AS TrackName
FROM 
  invoice_items il
JOIN 
  tracks t 
  ON il.TrackId = t.TrackId
;
 #11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT 
  il.InvoiceLineId, 
  t.Name AS TrackName, 
  a.Name AS ArtistName
FROM 
  invoice_items il
JOIN 
  tracks t ON il.TrackId = t.TrackId
JOIN 
  albums al ON t.AlbumId = al.AlbumId
JOIN 
  artists a ON al.ArtistId = a.ArtistId
;
 #12.	Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT 
    t.Name AS TrackName,
    a.Title AS AlbumName,
    mt.Name AS MediaType,
    g.Name AS Genre
FROM 
    tracks t
JOIN 
    albums a ON t.AlbumId = a.AlbumId
JOIN 
    media_types mt ON t.MediaTypeId = mt.MediaTypeId
JOIN 
    genres g ON t.GenreId = g.GenreId
;

#13. Show the total sales made by each sales agent.
SELECT
    e.FirstName || ' ' || e.LastName AS SalesAgent,
    SUM(i.Total) AS TotalSales
FROM
    employees e
LEFT JOIN
    customers c ON e.EmployeeId = c.SupportRepId
LEFT JOIN
    invoices i ON c.CustomerId = i.CustomerId
GROUP BY
    SalesAgent
;

#14. Which sales agent made the most dollars in sales in 2009?
SELECT
    e.FirstName || ' ' || e.LastName AS SalesAgent,
    SUM(i.Total) AS TotalSales
FROM
    employees e
LEFT JOIN
    customers c ON e.EmployeeId = c.SupportRepId
LEFT JOIN
    invoices i ON c.CustomerId = i.CustomerId
WHERE 
  InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
GROUP BY
    SalesAgent
ORDER BY
    TotalSales DESC
LIMIT 1
;

#15. Find the top-selling genres based on the number of tracks sold.
SELECT
    g.Name AS Genre,
    COUNT(il.InvoiceLineId) AS TracksSold
FROM
    genres g
JOIN
    tracks t ON g.GenreId = t.GenreId
JOIN
    invoice_items il ON t.TrackId = il.TrackId
GROUP BY
    g.GenreId
ORDER BY
    TracksSold DESC
;

#16. Investigate how many customers make repeat purchases and analyze their spending patterns.
WITH RepeatCustomers AS (
    SELECT
        c.CustomerId,
        c.FirstName || ' ' || c.LastName AS CustomerName,
        COUNT(DISTINCT i.InvoiceId) AS RepeatPurchaseCount,
        SUM(i.Total) AS TotalSpending
    FROM
        customers c
    JOIN
        invoices i ON c.CustomerId = i.CustomerId
    GROUP BY
        c.CustomerId
    HAVING
        COUNT(DISTINCT i.InvoiceId) > 1
)

SELECT
    rc.CustomerId,
    rc.CustomerName,
    rc.RepeatPurchaseCount,
    rc.TotalSpending,
    AVG(i.Total) AS AvgPurchaseAmount
FROM
    RepeatCustomers rc
JOIN
    invoices i ON rc.CustomerId = i.CustomerId
GROUP BY
    rc.CustomerId
ORDER BY
    rc.RepeatPurchaseCount DESC
;

